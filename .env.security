# =============================================================================
# GUARDIAN SECURITY: Environment Variables Configuration
# =============================================================================
# 
# SECURITY NOTICE: This file contains EXAMPLES ONLY
# NEVER commit actual production secrets to version control
# 
# Guardian Security Requirements:
# 1. All secrets must be at least 32 characters long
# 2. Use strong random generation for all secret keys
# 3. Rotate secrets regularly (every 90 days recommended)
# 4. Use different secrets for each environment
# 5. Store production secrets in secure vault systems
# =============================================================================

# Core Application Security
# -------------------------
# Generate with: openssl rand -hex 32
NEXTAUTH_SECRET="your-super-secure-nextauth-secret-minimum-32-chars"

# JWT Secret (separate from NextAuth)
# Generate with: openssl rand -base64 64
JWT_SECRET="your-jwt-secret-for-api-authentication-minimum-64-chars"

# Database Security
# -----------------
# Production database should use encrypted connections and strong passwords
DATABASE_URL="postgresql://username:secure_password@localhost:5432/astralfield?sslmode=require"
DIRECT_DATABASE_URL="postgresql://username:secure_password@localhost:5432/astralfield?sslmode=require"

# Database Encryption Key (for field-level encryption)
# Generate with: openssl rand -hex 32
DATABASE_ENCRYPTION_KEY="your-database-field-encryption-key-32-chars"

# Redis Security
# --------------
# Redis should use password authentication and TLS
REDIS_URL="rediss://username:password@redis-host:6380"
REDIS_PASSWORD="your-secure-redis-password"

# OAuth Providers
# ---------------
# Use separate OAuth apps for different environments
GOOGLE_CLIENT_ID="your-google-oauth-client-id"
GOOGLE_CLIENT_SECRET="your-google-oauth-client-secret"

# Email Security
# --------------
# Use app-specific passwords for email providers
SMTP_HOST="smtp.gmail.com"
SMTP_PORT="587"
SMTP_SECURE="false"
SMTP_USER="your-email@domain.com"
SMTP_PASS="your-app-specific-password"

# API Security
# ------------
# External API keys should be restricted by IP and have limited scope
ESPN_API_KEY="your-espn-api-key-if-required"
SLEEPER_API_KEY="your-sleeper-api-key-if-required"

# Session Security
# ----------------
# Session encryption key
# Generate with: openssl rand -hex 32
SESSION_SECRET="your-session-encryption-key-minimum-32-chars"

# CSRF Protection Key
# Generate with: openssl rand -hex 32
CSRF_SECRET="your-csrf-protection-key-minimum-32-chars"

# File Upload Security
# --------------------
# Encryption key for file storage
# Generate with: openssl rand -hex 32
FILE_ENCRYPTION_KEY="your-file-encryption-key-32-chars"

# Storage configuration
UPLOAD_MAX_SIZE="10485760"  # 10MB in bytes
ALLOWED_FILE_TYPES="jpg,jpeg,png,gif,pdf,doc,docx"

# Rate Limiting Configuration
# ---------------------------
RATE_LIMIT_WINDOW_MS="900000"     # 15 minutes
RATE_LIMIT_MAX_REQUESTS="100"     # Max requests per window
RATE_LIMIT_AUTH_WINDOW_MS="60000" # 1 minute for auth endpoints
RATE_LIMIT_AUTH_MAX="5"           # Max auth attempts per window

# Security Monitoring
# -------------------
# Enable security logging and monitoring
SECURITY_MONITORING_ENABLED="true"
SECURITY_LOG_LEVEL="warn"
SECURITY_ALERT_EMAIL="security@yourdomain.com"

# Geo-blocking (optional)
# -----------------------
ENABLE_GEO_BLOCKING="false"
BLOCKED_COUNTRIES="CN,RU,KP"  # Example: China, Russia, North Korea

# Development vs Production
# -------------------------
NODE_ENV="production"
NEXT_PUBLIC_APP_URL="https://yourdomain.com"

# Backup and Recovery
# -------------------
BACKUP_ENCRYPTION_KEY="your-backup-encryption-key-32-chars"
BACKUP_RETENTION_DAYS="90"

# Compliance
# ----------
GDPR_COMPLIANCE_ENABLED="true"
DATA_RETENTION_DAYS="2555"  # 7 years
AUDIT_LOG_RETENTION_DAYS="2555"

# =============================================================================
# SECURITY REMINDERS:
# =============================================================================
# 
# 1. NEVER use default or example values in production
# 2. Rotate all secrets before going live
# 3. Use a secrets management system (AWS Secrets Manager, Azure Key Vault, etc.)
# 4. Implement secret rotation automation
# 5. Monitor for secret exposure in logs and code
# 6. Use different secrets for each environment
# 7. Implement secret encryption at rest
# 8. Regular security audits of environment configuration
# 
# =============================================================================
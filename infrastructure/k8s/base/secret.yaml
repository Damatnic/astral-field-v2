# Quantum's Kubernetes Secrets Template
# Note: In production, use external secret management like HashiCorp Vault
apiVersion: v1
kind: Secret
metadata:
  name: astralfield-secrets
  namespace: astralfield
  labels:
    app.kubernetes.io/name: astralfield
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database
  DATABASE_URL: "postgresql://astralfield:REPLACE_WITH_SECURE_PASSWORD@postgres:5432/astralfield"
  POSTGRES_PASSWORD: "REPLACE_WITH_SECURE_PASSWORD"
  
  # Redis
  REDIS_URL: "redis://:REPLACE_WITH_REDIS_PASSWORD@redis:6379"
  REDIS_PASSWORD: "REPLACE_WITH_REDIS_PASSWORD"
  
  # JWT & Auth
  JWT_SECRET: "REPLACE_WITH_JWT_SECRET"
  NEXTAUTH_SECRET: "REPLACE_WITH_NEXTAUTH_SECRET"
  NEXTAUTH_URL: "https://your-domain.com"
  
  # External Services
  SENTRY_DSN: "REPLACE_WITH_SENTRY_DSN"
  
  # Email (if using)
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "REPLACE_WITH_SMTP_USER"
  SMTP_PASS: "REPLACE_WITH_SMTP_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: astralfield
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
type: Opaque
stringData:
  POSTGRES_DB: "astralfield"
  POSTGRES_USER: "astralfield"
  POSTGRES_PASSWORD: "REPLACE_WITH_SECURE_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: astralfield
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
type: Opaque
stringData:
  REDIS_PASSWORD: "REPLACE_WITH_REDIS_PASSWORD"
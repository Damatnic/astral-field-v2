# Quantum's High-Performance Ingress Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astralfield-ingress
  namespace: astralfield
  labels:
    app.kubernetes.io/name: astralfield
    app.kubernetes.io/component: ingress
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Performance optimizations
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    
    # Rate limiting for DDoS protection
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # WebSocket support for real-time features
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:;";
    
    # Cert Manager for SSL
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01
    
    # Caching
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
      }
spec:
  tls:
  - hosts:
    - astralfield.com
    - www.astralfield.com
    - api.astralfield.com
    secretName: astralfield-tls
  rules:
  - host: astralfield.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: astralfield-api
            port:
              number: 8080
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: astralfield-api
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astralfield-web
            port:
              number: 3000
  - host: www.astralfield.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: astralfield-api
            port:
              number: 8080
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: astralfield-api
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astralfield-web
            port:
              number: 3000
  - host: api.astralfield.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astralfield-api
            port:
              number: 8080
---
# Cluster Issuer for automatic SSL certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@astralfield.com  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
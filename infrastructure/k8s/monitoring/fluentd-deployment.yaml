# Quantum's Fluentd DaemonSet for Log Collection
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: astralfield-monitoring
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
data:
  fluent.conf: |
    # Prometheus monitoring
    <source>
      @type prometheus
      bind 0.0.0.0
      port 24231
      metrics_path /metrics
    </source>

    <source>
      @type prometheus_output_monitor
    </source>

    # Input plugin for Kubernetes logs
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        time_key time
        keep_time_key true
      </parse>
    </source>

    # Kubernetes metadata filter
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
    </filter>

    # Filter for Astral Field applications
    <filter kubernetes.**>
      @type grep
      <regexp>
        key $.kubernetes.labels.app_kubernetes_io_name
        pattern ^astralfield-(web|api)$
      </regexp>
    </filter>

    # Parse application logs
    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key timestamp
          time_format %Y-%m-%dT%H:%M:%S.%LZ
        </pattern>
        <pattern>
          format regexp
          expression /^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z)\s+(?<level>\w+)\s+(?<message>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%LZ
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>

    # Add environment and service labels
    <filter kubernetes.**>
      @type record_transformer
      <record>
        environment "#{ENV['ENVIRONMENT'] || 'production'}"
        cluster "#{ENV['CLUSTER_NAME'] || 'astralfield-production'}"
        service ${record["kubernetes"]["labels"]["app_kubernetes_io_name"]}
        component ${record["kubernetes"]["labels"]["app_kubernetes_io_component"]}
      </record>
    </filter>

    # Error detection and alerting
    <filter kubernetes.**>
      @type grep
      <regexp>
        key level
        pattern ^(ERROR|FATAL|error|fatal)$
      </regexp>
      add_tag_prefix error.
    </filter>

    # Performance metrics extraction
    <filter kubernetes.**>
      @type prometheus
      <metric>
        name fluentd_input_status_num_records_total
        type counter
        desc The total number of incoming records
        <labels>
          tag ${tag}
          hostname ${hostname}
        </labels>
      </metric>
    </filter>

    # Output to Elasticsearch
    <match kubernetes.**>
      @type elasticsearch
      @id out_es
      @log_level info
      include_tag_key true
      host elasticsearch.astralfield-monitoring.svc.cluster.local
      port 9200
      logstash_format true
      logstash_prefix astralfield
      logstash_dateformat %Y.%m.%d
      include_timestamp true
      type_name _doc
      
      # Buffer configuration
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        total_limit_size 500M
        overflow_action block
      </buffer>
    </match>

    # Output errors to separate index for alerting
    <match error.kubernetes.**>
      @type elasticsearch
      @id out_es_errors
      @log_level info
      include_tag_key true
      host elasticsearch.astralfield-monitoring.svc.cluster.local
      port 9200
      logstash_format true
      logstash_prefix astralfield-errors
      logstash_dateformat %Y.%m.%d
      include_timestamp true
      type_name _doc
      
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.errors.buffer
        flush_mode interval
        flush_interval 1s
        chunk_limit_size 1M
      </buffer>
    </match>

    # System logs
    <source>
      @type systemd
      tag systemd
      path /var/log/journal
      <storage>
        @type local
        persistent true
        path /var/log/fluentd-systemd.pos
      </storage>
      <entry>
        fields_strip_underscores true
      </entry>
    </source>

    <match systemd>
      @type elasticsearch
      @id out_es_systemd
      host elasticsearch.astralfield-monitoring.svc.cluster.local
      port 9200
      logstash_format true
      logstash_prefix systemd
      logstash_dateformat %Y.%m.%d
      include_timestamp true
      type_name _doc
    </match>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: astralfield-monitoring
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluentd
        app.kubernetes.io/component: logging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.16-debian-elasticsearch7-1
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: CLUSTER_NAME
          value: "astralfield-production"
        - name: FLUENTD_SYSTEMD_CONF
          value: disable
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: buffer-storage
          mountPath: /var/log/fluentd-buffers
        ports:
        - containerPort: 24231
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 10
          periodSeconds: 10
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: buffer-storage
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: astralfield-monitoring
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: astralfield-monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  namespace: astralfield-monitoring
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "24231"
spec:
  type: ClusterIP
  ports:
  - port: 24231
    targetPort: 24231
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
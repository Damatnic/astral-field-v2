window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":24,"numPassedTestSuites":0,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":28,"startTime":1760465684568,"success":false,"testResults":[{"numFailingTests":24,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1760465685635,"runtime":615,"slow":false,"start":1760465685020},"testFilePath":"C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts","failureMessage":"  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/scoreboard › should return scoreboard data\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      177 |         const data = await response.json();\n      178 |         \n    > 179 |         expect(response.status).toBe(200);\n          |                                 ^\n      180 |         expect(data).toHaveProperty('events');\n      181 |         expect(data.events).toBeInstanceOf(Array);\n      182 |         expect(data).toHaveProperty('week');\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:179:33)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/scoreboard › should include cache headers\n\n    expect(received).toBeTruthy()\n\n    Received: null\n\n      187 |         const cacheControl = response.headers.get('Cache-Control');\n      188 |         \n    > 189 |         expect(cacheControl).toBeTruthy();\n          |                              ^\n      190 |         expect(cacheControl).toContain('s-maxage');\n      191 |       });\n      192 |     });\n\n      at Object.toBeTruthy (__tests__/api/espn/complete-suite.test.ts:189:30)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/news › should return news articles\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      197 |         const data = await response.json();\n      198 |         \n    > 199 |         expect(response.status).toBe(200);\n          |                                 ^\n      200 |         expect(data).toHaveProperty('articles');\n      201 |         expect(data.articles).toBeInstanceOf(Array);\n      202 |       });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:199:33)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/standings › should return NFL standings\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      208 |         const data = await response.json();\n      209 |         \n    > 210 |         expect(response.status).toBe(200);\n          |                                 ^\n      211 |         expect(data).toHaveProperty('standings');\n      212 |       });\n      213 |\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:210:33)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/standings › should include 10-minute cache headers\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      216 |         const cacheControl = response.headers.get('Cache-Control');\n      217 |         \n    > 218 |         expect(cacheControl).toContain('s-maxage=600');\n          |                              ^\n      219 |       });\n      220 |     });\n      221 |\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:218:30)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/injuries › should return injury reports\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      225 |         const data = await response.json();\n      226 |         \n    > 227 |         expect(response.status).toBe(200);\n          |                                 ^\n      228 |         expect(data).toBeInstanceOf(Array);\n      229 |       });\n      230 |\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:227:33)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/injuries › should include 5-minute cache headers\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      233 |         const cacheControl = response.headers.get('Cache-Control');\n      234 |         \n    > 235 |         expect(cacheControl).toContain('s-maxage=300');\n          |                              ^\n      236 |       });\n      237 |     });\n      238 |\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:235:30)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/teams › should return all NFL teams\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      242 |         const data = await response.json();\n      243 |         \n    > 244 |         expect(response.status).toBe(200);\n          |                                 ^\n      245 |         expect(data).toHaveProperty('sports');\n      246 |         expect(data.sports[0].leagues[0].teams).toBeInstanceOf(Array);\n      247 |       });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:244:33)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/teams › should include 1-hour cache headers\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      251 |         const cacheControl = response.headers.get('Cache-Control');\n      252 |         \n    > 253 |         expect(cacheControl).toContain('s-maxage=3600');\n          |                              ^\n      254 |       });\n      255 |     });\n      256 |\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:253:30)\n\n  ● ESPN API Complete Test Suite › Static Data Endpoints › GET /api/espn/week › should return current week number\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      260 |         const data = await response.json();\n      261 |         \n    > 262 |         expect(response.status).toBe(200);\n          |                                 ^\n      263 |         expect(data).toHaveProperty('week');\n      264 |         expect(data).toHaveProperty('season');\n      265 |         expect(typeof data.week).toBe('number');\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:262:33)\n\n  ● ESPN API Complete Test Suite › Query Parameter Endpoints › GET /api/espn/schedule › should return weekly schedule\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      275 |         const data = await response.json();\n      276 |         \n    > 277 |         expect(response.status).toBe(200);\n          |                                 ^\n      278 |         expect(data).toHaveProperty('events');\n      279 |       });\n      280 |\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:277:33)\n\n  ● ESPN API Complete Test Suite › Query Parameter Endpoints › GET /api/espn/schedule › should accept week query parameter\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      283 |         const response = await getSchedule(mockRequest as any);\n      284 |         \n    > 285 |         expect(response.status).toBe(200);\n          |                                 ^\n      286 |       });\n      287 |\n      288 |       it('should return 400 for invalid week parameter', async () => {\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:285:33)\n\n  ● ESPN API Complete Test Suite › Query Parameter Endpoints › GET /api/espn/teams/[abbr]/schedule › should return team schedule\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      300 |         const data = await response.json();\n      301 |         \n    > 302 |         expect(response.status).toBe(200);\n          |                                 ^\n      303 |         expect(data).toHaveProperty('team');\n      304 |       });\n      305 |\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:302:33)\n\n  ● ESPN API Complete Test Suite › Query Parameter Endpoints › GET /api/espn/teams/[abbr]/schedule › should accept week query parameter\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      308 |         const response = await getTeamSchedule(mockRequest as any, { params: { abbr: 'KC' } });\n      309 |         \n    > 310 |         expect(response.status).toBe(200);\n          |                                 ^\n      311 |       });\n      312 |\n      313 |       it('should return 400 for invalid week parameter', async () => {\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:310:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id] › should return player information\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      327 |         const data = await response.json();\n      328 |         \n    > 329 |         expect(response.status).toBe(200);\n          |                                 ^\n      330 |         expect(data).toHaveProperty('fullName');\n      331 |         expect(data).toHaveProperty('position');\n      332 |       });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:329:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/stats › should return player statistics\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      339 |         const data = await response.json();\n      340 |         \n    > 341 |         expect(response.status).toBe(200);\n          |                                 ^\n      342 |         expect(data).toHaveProperty('splits');\n      343 |       });\n      344 |\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:341:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/stats › should include 5-minute cache headers\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      348 |         const cacheControl = response.headers.get('Cache-Control');\n      349 |         \n    > 350 |         expect(cacheControl).toContain('s-maxage=300');\n          |                              ^\n      351 |       });\n      352 |     });\n      353 |\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:350:30)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/live › should return live player stats\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      358 |         const data = await response.json();\n      359 |         \n    > 360 |         expect(response.status).toBe(200);\n          |                                 ^\n      361 |         expect(data).toHaveProperty('playerId');\n      362 |         expect(data).toHaveProperty('isLive');\n      363 |       });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:360:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/live › should include 30-second cache headers\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      368 |         const cacheControl = response.headers.get('Cache-Control');\n      369 |         \n    > 370 |         expect(cacheControl).toContain('s-maxage=30');\n          |                              ^\n      371 |       });\n      372 |     });\n      373 |\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:370:30)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/projections › should return player projections\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      378 |         const data = await response.json();\n      379 |         \n    > 380 |         expect(response.status).toBe(200);\n          |                                 ^\n      381 |         expect(data).toHaveProperty('playerId');\n      382 |         expect(data).toHaveProperty('projectedPoints');\n      383 |       });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:380:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/players/[id]/projections › should accept week query parameter\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      387 |         const response = await getPlayerProjections(mockRequest as any, { params: { id: '3139477' } });\n      388 |         \n    > 389 |         expect(response.status).toBe(200);\n          |                                 ^\n      390 |       });\n      391 |\n      392 |       it('should return 400 for invalid week parameter', async () => {\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:389:33)\n\n  ● ESPN API Complete Test Suite › Dynamic Route Endpoints › GET /api/espn/teams/[id]/roster › should return team roster\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      404 |         const data = await response.json();\n      405 |         \n    > 406 |         expect(response.status).toBe(200);\n          |                                 ^\n      407 |         expect(data).toHaveProperty('team');\n      408 |       });\n      409 |     });\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:406:33)\n\n  ● ESPN API Complete Test Suite › Sync Endpoints › POST /api/espn/sync/players › should sync players successfully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      416 |         const data = await response.json();\n      417 |         \n    > 418 |         expect(response.status).toBe(200);\n          |                                 ^\n      419 |         expect(data).toHaveProperty('success');\n      420 |         expect(data.success).toBe(true);\n      421 |         expect(data).toHaveProperty('message');\n\n      at Object.toBe (__tests__/api/espn/complete-suite.test.ts:418:33)\n\n  ● ESPN API Complete Test Suite › Caching Strategy › should have appropriate cache times for different endpoint types\n\n    expect(received).toContain(expected) // indexOf\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: null\n\n      451 |       const teamsResponse = await getTeams();\n      452 |       \n    > 453 |       expect(liveResponse.headers.get('Cache-Control')).toContain('s-maxage=30'); // Live: 30s\n          |                                                         ^\n      454 |       expect(statsResponse.headers.get('Cache-Control')).toContain('s-maxage=300'); // Stats: 5min\n      455 |       expect(teamsResponse.headers.get('Cache-Control')).toContain('s-maxage=3600'); // Teams: 1hr\n      456 |     });\n\n      at Object.toContain (__tests__/api/espn/complete-suite.test.ts:453:57)\n","testResults":[{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/scoreboard"],"duration":2,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:179:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/scoreboard should return scoreboard data","status":"failed","title":"should return scoreboard data"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/scoreboard"],"duration":1,"failureMessages":["Error: expect(received).toBeTruthy()\n\nReceived: null\n    at Object.toBeTruthy (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:189:30)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/scoreboard should include cache headers","status":"failed","title":"should include cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/news"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:199:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/news should return news articles","status":"failed","title":"should return news articles"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/standings"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:210:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/standings should return NFL standings","status":"failed","title":"should return NFL standings"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/standings"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:218:30)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/standings should include 10-minute cache headers","status":"failed","title":"should include 10-minute cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/injuries"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:227:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/injuries should return injury reports","status":"failed","title":"should return injury reports"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/injuries"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:235:30)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/injuries should include 5-minute cache headers","status":"failed","title":"should include 5-minute cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/teams"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:244:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/teams should return all NFL teams","status":"failed","title":"should return all NFL teams"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/teams"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:253:30)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/teams should include 1-hour cache headers","status":"failed","title":"should include 1-hour cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Static Data Endpoints","GET /api/espn/week"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:262:33)"],"fullName":"ESPN API Complete Test Suite Static Data Endpoints GET /api/espn/week should return current week number","status":"failed","title":"should return current week number"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/schedule"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:277:33)"],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/schedule should return weekly schedule","status":"failed","title":"should return weekly schedule"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/schedule"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:285:33)"],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/schedule should accept week query parameter","status":"failed","title":"should accept week query parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/schedule"],"duration":0,"failureMessages":[],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/schedule should return 400 for invalid week parameter","status":"passed","title":"should return 400 for invalid week parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/teams/[abbr]/schedule"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:302:33)"],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/teams/[abbr]/schedule should return team schedule","status":"failed","title":"should return team schedule"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/teams/[abbr]/schedule"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:310:33)"],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/teams/[abbr]/schedule should accept week query parameter","status":"failed","title":"should accept week query parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Query Parameter Endpoints","GET /api/espn/teams/[abbr]/schedule"],"duration":0,"failureMessages":[],"fullName":"ESPN API Complete Test Suite Query Parameter Endpoints GET /api/espn/teams/[abbr]/schedule should return 400 for invalid week parameter","status":"passed","title":"should return 400 for invalid week parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:329:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id] should return player information","status":"failed","title":"should return player information"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/stats"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:341:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/stats should return player statistics","status":"failed","title":"should return player statistics"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/stats"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:350:30)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/stats should include 5-minute cache headers","status":"failed","title":"should include 5-minute cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/live"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:360:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/live should return live player stats","status":"failed","title":"should return live player stats"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/live"],"duration":1,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:370:30)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/live should include 30-second cache headers","status":"failed","title":"should include 30-second cache headers"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/projections"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:380:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/projections should return player projections","status":"failed","title":"should return player projections"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/projections"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:389:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/projections should accept week query parameter","status":"failed","title":"should accept week query parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/players/[id]/projections"],"duration":0,"failureMessages":[],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/players/[id]/projections should return 400 for invalid week parameter","status":"passed","title":"should return 400 for invalid week parameter"},{"ancestorTitles":["ESPN API Complete Test Suite","Dynamic Route Endpoints","GET /api/espn/teams/[id]/roster"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:406:33)"],"fullName":"ESPN API Complete Test Suite Dynamic Route Endpoints GET /api/espn/teams/[id]/roster should return team roster","status":"failed","title":"should return team roster"},{"ancestorTitles":["ESPN API Complete Test Suite","Sync Endpoints","POST /api/espn/sync/players"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:418:33)"],"fullName":"ESPN API Complete Test Suite Sync Endpoints POST /api/espn/sync/players should sync players successfully","status":"failed","title":"should sync players successfully"},{"ancestorTitles":["ESPN API Complete Test Suite","Error Handling"],"duration":1,"failureMessages":[],"fullName":"ESPN API Complete Test Suite Error Handling should handle ESPN API errors gracefully","status":"passed","title":"should handle ESPN API errors gracefully"},{"ancestorTitles":["ESPN API Complete Test Suite","Caching Strategy"],"duration":0,"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: null\n    at Object.toContain (C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\__tests__\\api\\espn\\complete-suite.test.ts:453:57)"],"fullName":"ESPN API Complete Test Suite Caching Strategy should have appropriate cache times for different endpoint types","status":"failed","title":"should have appropriate cache times for different endpoint types"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/**/*.d.ts","!src/**/index.ts","!src/**/*.stories.{js,jsx,ts,tsx}","!src/app/globals.css","!src/middleware.ts"],"coverageDirectory":"C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web\\coverage","coverageProvider":"babel","coverageReporters":["text","text-summary","lcov","html","json-summary","clover"],"coverageThreshold":{"global":{"statements":95,"branches":90,"functions":95,"lines":95},"./src/components/":{"statements":95,"branches":85,"functions":95,"lines":95},"./src/lib/":{"statements":100,"branches":95,"functions":100,"lines":100},"./src/app/api/":{"statements":100,"branches":95,"functions":100,"lines":100}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":["__tests__/api/espn/complete-suite.test.ts"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\node_modules\\jest-junit\\index.js",{"outputDirectory":"<rootDir>/test-results","outputName":"jest-results.xml","suiteName":"Astral Field Unit Tests"}],["C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"<rootDir>/test-results","filename":"unit-test-report.html","openReport":false}]],"rootDir":"C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web","runTestsByPath":false,"seed":77365732,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"__tests__\\\\api\\\\espn\\\\complete-suite.test.ts","testSequencer":"C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1760465685642,"_reporterOptions":{"publicPath":"C:\\_ASTRAL_PROJECTS\\ASTRAL_FIELD_V1\\apps\\web/test-results","filename":"unit-test-report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})
{
  "permissions": {
    "allow": [
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(npm test:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma:*)",
      "Bash(DATABASE_URL=\"sqlite:./dev.db\" npx prisma db push)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma db push)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "WebFetch(domain:vercel.com)",
      "Bash(gh api:*)",
      "Bash(npm audit:*)",
      "Bash(npx vercel:*)",
      "Bash(vercel:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(for file in src/components/draft/draft-room.tsx src/components/live/live-scoring-dashboard.tsx src/components/players/player-search.tsx src/components/settings/settings-form.tsx)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(grep:*)",
      "Bash(done)",
      "WebFetch(domain:web-7cbps4fxv-astral-productions.vercel.app)",
      "Bash(npx tsx:*)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx ../../scripts/seed-damato-users.ts)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx ../../scripts/create-damato-users.ts)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/seed-damato-users.ts)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/create-simple-users.ts)",
      "WebFetch(domain:web-aguscb2f7-astral-productions.vercel.app)",
      "WebFetch(domain:web-astral-productions.vercel.app)",
      "WebFetch(domain:localhost)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma studio --browser none --port 5555)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/check-users.ts)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/test-signin.ts)",
      "WebFetch(domain:web-13ddq4j92-astral-productions.vercel.app)",
      "Bash(node:*)",
      "WebFetch(domain:web-dqu51teye-astral-productions.vercel.app)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/auto-setup-and-test.ts)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/test-quick-signin.ts)",
      "WebFetch(domain:web-7e9k3v3hm-astral-productions.vercel.app)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx scripts/comprehensive-login-dashboard-test.ts)",
      "WebFetch(domain:web-ksu192fnz-astral-productions.vercel.app)",
      "WebFetch(domain:web-b45unuoxf-astral-productions.vercel.app)",
      "WebFetch(domain:web-3n61yluzx-astral-productions.vercel.app)",
      "Bash(python3:*)",
      "Bash(cmd /c:*)",
      "WebFetch(domain:web-jv11kgsl3-astral-productions.vercel.app)",
      "mcp__ide__getDiagnostics",
      "Bash(sed:*)",
      "Bash(git rm:*)",
      "WebFetch(domain:web-kai93tcmb-astral-productions.vercel.app)",
      "Bash(npx @libsql/cli:*)",
      "WebFetch(domain:web-b2pbzyw24-astral-productions.vercel.app)",
      "WebFetch(domain:web-qqxbsvk0l-astral-productions.vercel.app)",
      "Bash(echo:*)",
      "Bash(set -a)",
      "Bash(source:*)",
      "Bash(set +a)",
      "WebFetch(domain:web-8jcj9zhx6-astral-productions.vercel.app)",
      "Bash(npm run:*)",
      "Bash(npx tsc:*)",
      "Bash(chmod:*)",
      "Bash(del:*)",
      "Read(//c/Users/damat/**)",
      "Bash(npx next build:*)",
      "WebFetch(domain:web-1v120sfmx-astral-productions.vercel.app)",
      "WebFetch(domain:web-7ts4brd6b-astral-productions.vercel.app)",
      "WebFetch(domain:web-i9ai3picv-astral-productions.vercel.app)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx tsx ../../scripts/setup-week4-league.ts)",
      "Bash(dir \"C:\\Users\\damat\\_REPOS\\ASTRAL_FIELD_V1\\apps\\web\\src\\components\\ui\")",
      "WebFetch(domain:astralfield.vercel.app)",
      "WebFetch(domain:web-daxgcan59-astral-productions.vercel.app)",
      "Bash(set DATABASE_URL=postgresql://neondb_owner:npg_rkDs2yUYZEQ7@ep-proud-pond-adntwlpd-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(npx kill-port:*)",
      "Bash(netstat:*)",
      "WebFetch(domain:astral-field-v2.vercel.app)",
      "Bash(npx dotenv -e .env -- npx tsx scripts/check-damato-league-setup.ts:*)",
      "Bash(npx dotenv -e .env -- npx tsx scripts/test-damato-dynasty-login.ts:*)",
      "Bash(PORT=3002 npm run dev)",
      "Bash(gh run view:*)",
      "WebFetch(domain:web-4883xsjca-astral-productions.vercel.app)",
      "WebFetch(domain:web-erwjvf0aq-astral-productions.vercel.app)",
      "Bash(timeout:*)",
      "WebFetch(domain:web-m8skxjrlz-astral-productions.vercel.app)",
      "WebFetch(domain:web-ofwlm2umt-astral-productions.vercel.app)",
      "WebFetch(domain:web-j4gr6jrab-astral-productions.vercel.app)",
      "WebFetch(domain:web-pkrb099g3-astral-productions.vercel.app)",
      "Bash(gh run list:*)",
      "WebFetch(domain:web-r40qj4fp6-astral-productions.vercel.app)",
      "Bash(PORT=3005 npm run dev)",
      "Bash(npx next dev:*)",
      "Bash(npx jest:*)",
      "WebFetch(domain:authjs.dev)",
      "Bash(PORT=3010 npm run dev)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(npx eslint:*)",
      "Bash(git checkout:*)",
      "Bash(npx playwright test:*)",
      "Bash(PORT=3003 npm run dev)",
      "Bash(npm ls:*)",
      "Bash(tree:*)",
      "Bash(PORT=3007 npm run dev)",
      "Bash(PORT=4001 npm run dev)",
      "Bash(PORT=4001 npx next dev --port 4001)",
      "Bash(PORT=4001 NODE_ENV=development npx next dev --port 4001)",
      "Bash(NODE_ENV=test npm test -- --passWithNoTests --verbose=false)",
      "Bash(JEST_DISABLE=true NODE_ENV=development PORT=4001 npx next dev --port 4001)",
      "Bash(JEST_DISABLE=true NODE_ENV=development PORT=4001 npx next dev --port 4001 --turbo=false)",
      "Bash(npx next:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" PORT=4001 npx next dev --port 4001)",
      "Bash(dir:*)",
      "Bash(npx lighthouse:*)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"Test $i:\")",
      "Bash(time curl:*)",
      "Bash(JEST_DISABLE=true NODE_ENV=development NODE_OPTIONS=\"--max-old-space-size=4096\" PORT=4001 npx next dev --port 4001)",
      "Bash(npx @next/bundle-analyzer:*)",
      "WebFetch(domain:web-724220wit-astral-productions.vercel.app)",
      "WebFetch(domain:web-67v9s0ipy-astral-productions.vercel.app)",
      "WebFetch(domain:web-mlkc59tdh-astral-productions.vercel.app)",
      "WebFetch(domain:web-i0bofjrh5-astral-productions.vercel.app)",
      "WebFetch(domain:web-d19te6ck7-astral-productions.vercel.app)",
      "WebFetch(domain:web-5zjwlwmm5-astral-productions.vercel.app)",
      "WebFetch(domain:web-rfs0pyuw6-astral-productions.vercel.app)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_rkDs2yUYZEQ7@ep-proud-pond-adntwlpd-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require\" npx prisma db push)",
      "WebFetch(domain:web-6bqmd9gat-astral-productions.vercel.app)",
      "WebFetch(domain:web-mglzkwrym-astral-productions.vercel.app)",
      "WebFetch(domain:web-n2ykhu4p0-astral-productions.vercel.app)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_rkDs2yUYZEQ7@ep-proud-pond-adntwlpd-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require\" npx tsx ../../scripts/check-users.ts)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_rkDs2yUYZEQ7@ep-proud-pond-adntwlpd-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require\" npx tsx ../../scripts/test-signin.ts)",
      "Bash(DATABASE_URL=\"postgresql://neondb_owner:npg_rkDs2yUYZEQ7@ep-proud-pond-adntwlpd-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require\" npx tsx ../../scripts/comprehensive-login-dashboard-test.ts)",
      "WebFetch(domain:web-n3aaqqhho-astral-productions.vercel.app)",
      "Bash(PORT=9020 npm run dev)"
    ],
    "deny": [],
    "ask": []
  }
}